// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PGEFCoreIssue;

#nullable disable

namespace PGEFCoreIssue.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240121225251_AddSearchable")]
    partial class AddSearchable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PGEFCoreIssue.EFTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IPAddress")
                        .HasColumnType("integer");

                    b.Property<string>("SearchableIPAddress")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasComputedColumnSql("((IPAddress & 255) || '.' || ((IPAddress >> 8) & 255)) || '.' || ((IPAddress >> 16) & 255) || '.' || ((IPAddress >> 24) & 255)", true);

                    b.HasKey("Id");

                    b.HasIndex("IPAddress");

                    b.HasIndex("SearchableIPAddress");

                    b.ToTable("Test");
                });
#pragma warning restore 612, 618
        }
    }
}
